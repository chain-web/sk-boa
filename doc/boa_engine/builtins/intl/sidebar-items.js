initSidebarItems({"fn":[["best_available_locale","The `BestAvailableLocale` abstract operation compares the provided argument `locale`, which must be a String value with a structurally valid and canonicalized Unicode BCP 47 locale identifier, against the locales in `availableLocales` and returns either the longest non-empty prefix of `locale` that is an element of `availableLocales`, or undefined if there is no such element."],["best_fit_matcher","The `BestFitMatcher` abstract operation compares `requestedLocales`, which must be a `List` as returned by `CanonicalizeLocaleList`, against the locales in `availableLocales` and determines the best available language to meet the request. The algorithm is implementation dependent, but should produce results that a typical user of the requested locales would perceive as at least as good as those produced by the `LookupMatcher` abstract operation."],["default_locale","The `DefaultLocale` abstract operation returns a String value representing the structurally valid and canonicalized Unicode BCP 47 locale identifier for the host environmentâ€™s current locale."],["insert_unicode_extension_and_canonicalize","The `InsertUnicodeExtensionAndCanonicalize` abstract operation inserts `extension`, which must be a Unicode locale extension sequence, into `locale`, which must be a String value with a structurally valid and canonicalized Unicode BCP 47 locale identifier."],["lookup_matcher","The `LookupMatcher` abstract operation compares `requestedLocales`, which must be a `List` as returned by `CanonicalizeLocaleList`, against the locales in `availableLocales` and determines the best available language to meet the request."],["resolve_locale","The `ResolveLocale` abstract operation compares a BCP 47 language priority list `requestedLocales` against the locales in `availableLocales` and determines the best available language to meet the request. `availableLocales`, `requestedLocales`, and `relevantExtensionKeys` must be provided as `List` values, options and `localeData` as Records."],["unicode_extension_components","The `UnicodeExtensionComponents` abstract operation returns the attributes and keywords from `extension`, which must be a String value whose contents are a `Unicode locale extension` sequence."]],"mod":[["date_time_format","This module implements the global `Intl.DateTimeFormat` object."]],"struct":[["DateTimeFormatRecord","`DateTimeFormatRecord` type aggregates `locale_matcher` selector and `properties` map."],["Intl","JavaScript `Intl` object."],["Keyword","`Keyword` structure is a pair of keyword key and keyword value."],["MatcherRecord","`MatcherRecord` type aggregates unicode `locale` string and unicode locale `extension`."],["ResolveLocaleRecord","`ResolveLocaleRecord` type consists of unicode `locale` string, `data_locale` string and `properties` map."],["UniExtRecord","`UniExtRecord` structure represents unicode extension records."]],"type":[["LocaleDataRecord","`LocaleDataRecord` is the type of `locale_data` argument in `resolve_locale` subroutine."]]});